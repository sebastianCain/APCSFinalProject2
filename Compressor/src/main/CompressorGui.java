/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.io.FileReader;
import java.io.IOException;
import javax.swing.JFileChooser;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.*;


/**
 *
 * @author winston
 */
public class CompressorGui extends javax.swing.JFrame {
    
    private String _data;
    private File _file;
    private byte[] _output;
    private String _oPath;
    /**
     * Creates new form CompressorGui
     */
    public CompressorGui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        diagDialog = new javax.swing.JDialog();
        diagClose = new javax.swing.JButton();
        diagText = new javax.swing.JLabel();
        errorDialog = new javax.swing.JDialog();
        errorClose = new javax.swing.JButton();
        errorText = new javax.swing.JLabel();
        sixBit = new javax.swing.JPanel();
        sixBitText = new javax.swing.JLabel();
        sixBitCompress = new javax.swing.JButton();
        sixBitDecompress = new javax.swing.JButton();
        dictComp = new javax.swing.JPanel();
        dictText = new javax.swing.JLabel();
        dictCompress = new javax.swing.JButton();
        dictDecompress = new javax.swing.JButton();
        filePane = new javax.swing.JPanel();
        chooseFile = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        currPath = new javax.swing.JTextArea();
        currPathLabel = new javax.swing.JLabel();
        menu = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        subFileOpen = new javax.swing.JMenuItem();
        subFileQuit = new javax.swing.JMenuItem();

        fileChooser.setDialogTitle("Choose A File");
        fileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserActionPerformed(evt);
            }
        });

        diagDialog.setMinimumSize(new java.awt.Dimension(500, 250));

        diagClose.setText("Close");
        diagClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diagCloseActionPerformed(evt);
            }
        });

        diagText.setBackground(new java.awt.Color(204, 255, 255));
        diagText.setFont(new java.awt.Font("Menlo", 1, 24)); // NOI18N
        diagText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        diagText.setText("Message");

        javax.swing.GroupLayout diagDialogLayout = new javax.swing.GroupLayout(diagDialog.getContentPane());
        diagDialog.getContentPane().setLayout(diagDialogLayout);
        diagDialogLayout.setHorizontalGroup(
            diagDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diagDialogLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(diagClose, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
            .addGroup(diagDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(diagDialogLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(diagText, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        diagDialogLayout.setVerticalGroup(
            diagDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, diagDialogLayout.createSequentialGroup()
                .addContainerGap(156, Short.MAX_VALUE)
                .addComponent(diagClose)
                .addGap(21, 21, 21))
            .addGroup(diagDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(diagDialogLayout.createSequentialGroup()
                    .addGap(60, 60, 60)
                    .addComponent(diagText, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                    .addGap(61, 61, 61)))
        );

        errorDialog.setMinimumSize(new java.awt.Dimension(500, 250));

        errorClose.setText("Close");
        errorClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errorCloseActionPerformed(evt);
            }
        });

        errorText.setBackground(new java.awt.Color(204, 255, 255));
        errorText.setFont(new java.awt.Font("Menlo", 1, 24)); // NOI18N
        errorText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        errorText.setText("Error");

        javax.swing.GroupLayout errorDialogLayout = new javax.swing.GroupLayout(errorDialog.getContentPane());
        errorDialog.getContentPane().setLayout(errorDialogLayout);
        errorDialogLayout.setHorizontalGroup(
            errorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(errorDialogLayout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(errorClose, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
            .addGroup(errorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(errorDialogLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(errorText, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        errorDialogLayout.setVerticalGroup(
            errorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(errorDialogLayout.createSequentialGroup()
                .addContainerGap(145, Short.MAX_VALUE)
                .addComponent(errorClose)
                .addGap(29, 29, 29))
            .addGroup(errorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(errorDialogLayout.createSequentialGroup()
                    .addGap(60, 60, 60)
                    .addComponent(errorText, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                    .addGap(61, 61, 61)))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        sixBit.setBackground(new java.awt.Color(153, 204, 255));
        sixBit.setForeground(new java.awt.Color(153, 204, 255));

        sixBitText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sixBitText.setText("6 Bit Compression");

        sixBitCompress.setText("Compress");
        sixBitCompress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixBitCompressActionPerformed(evt);
            }
        });

        sixBitDecompress.setText("Decompress");
        sixBitDecompress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixBitDecompressActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sixBitLayout = new javax.swing.GroupLayout(sixBit);
        sixBit.setLayout(sixBitLayout);
        sixBitLayout.setHorizontalGroup(
            sixBitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sixBitLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sixBitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sixBitCompress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sixBitText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sixBitDecompress, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                .addContainerGap())
        );
        sixBitLayout.setVerticalGroup(
            sixBitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sixBitLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sixBitText)
                .addGap(18, 18, 18)
                .addComponent(sixBitCompress)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sixBitDecompress)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        dictComp.setBackground(new java.awt.Color(153, 204, 255));

        dictText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dictText.setText("Dictionary Compression");

        dictCompress.setText("Compress");

        dictDecompress.setText("Decompress");

        javax.swing.GroupLayout dictCompLayout = new javax.swing.GroupLayout(dictComp);
        dictComp.setLayout(dictCompLayout);
        dictCompLayout.setHorizontalGroup(
            dictCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dictCompLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dictCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dictDecompress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dictText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                    .addComponent(dictCompress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        dictCompLayout.setVerticalGroup(
            dictCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dictCompLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dictText)
                .addGap(18, 18, 18)
                .addComponent(dictCompress)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dictDecompress)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        filePane.setBackground(new java.awt.Color(153, 204, 255));

        chooseFile.setText("Choose File");
        chooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileActionPerformed(evt);
            }
        });

        currPath.setEditable(false);
        currPath.setBackground(new java.awt.Color(153, 204, 255));
        currPath.setColumns(20);
        currPath.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        currPath.setRows(1);
        currPath.setText(" None");
        currPath.setToolTipText("Shows the currently selected file");
        currPath.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        currPath.setFocusable(false);
        jScrollPane2.setViewportView(currPath);

        currPathLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        currPathLabel.setText("Selected File");

        javax.swing.GroupLayout filePaneLayout = new javax.swing.GroupLayout(filePane);
        filePane.setLayout(filePaneLayout);
        filePaneLayout.setHorizontalGroup(
            filePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(filePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(currPathLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filePaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chooseFile, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(135, 135, 135))
        );
        filePaneLayout.setVerticalGroup(
            filePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filePaneLayout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(chooseFile, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(currPathLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        menuFile.setText("File");

        subFileOpen.setText("Open");
        subFileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subFileOpenActionPerformed(evt);
            }
        });
        menuFile.add(subFileOpen);

        subFileQuit.setText("Quit");
        subFileQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subFileQuitActionPerformed(evt);
            }
        });
        menuFile.add(subFileQuit);

        menu.add(menuFile);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(filePane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sixBit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(dictComp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filePane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dictComp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sixBit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sixBitCompressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixBitCompressActionPerformed
        try {
            _output = SixEncrypt.encrypt(_data);
            //diagDialog.setVisible(true);
            //diagText.setText(_output.toString());
        }
        
        catch(Exception e){
            errorDialog.setVisible(true);
            errorText.setText("Method hang!");
            System.out.println(e);
        }
   
        try {
	    diagDialog.setVisible(true);
            fileChooser.setSelectedFile(new File("archive.zip"));
            fileChooser.showSaveDialog(this);
            File newFile = fileChooser.getSelectedFile();
            String path = newFile.toPath().toString();
            FileOutputStream fileOutputStream = new FileOutputStream(path); 
            
	    fileOutputStream.write(_output);
	    fileOutputStream.close();
            diagDialog.setVisible(true);
            diagText.setText("File compressed!");   
        }
        
        catch(Exception e){
            errorDialog.setVisible(true);
            errorText.setText("Compression error!");
        }
    }//GEN-LAST:event_sixBitCompressActionPerformed

    private void subFileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subFileOpenActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File input = fileChooser.getSelectedFile();
            _file = input;
            try {
			FileReader fileReader = new FileReader(input);
                        //currPath.read(new FileReader(input.getAbsolutePath()), null);
                        currPath.setText(input.toPath().toString());
			BufferedReader bufferedReader = new BufferedReader(fileReader);
			StringBuffer stringBuffer = new StringBuffer();
			String line;
			while ((line = bufferedReader.readLine()) != null) {
				stringBuffer.append(line);
				stringBuffer.append("\n");
			}
			fileReader.close();
                        
                        _data = stringBuffer.toString();
			//diagDialog.setVisible(true);
                        //diagText.setText("Data compressed!");
		} catch (IOException e) {
			errorDialog.setVisible(true);
                        errorText.setText("File selection error!");
		}
            
        } else {
            errorDialog.setVisible(true);
            errorText.setText("File action canceled by user!");
        }
    }//GEN-LAST:event_subFileOpenActionPerformed

    private void sixBitDecompressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixBitDecompressActionPerformed
        try {
	
            diagDialog.setVisible(true);
            fileChooser.setSelectedFile(new File(""));
            fileChooser.showSaveDialog(this);
            File newFile = fileChooser.getSelectedFile();
            String path = newFile.toPath().toString();
            
            FileInputStream fileInputStream = new FileInputStream(_file);
	    fileInputStream.read(_output);
            _data = SixEncrypt.decrypt(_output);
	    fileInputStream.close();
            
            BufferedWriter bufferedWriter = null;
            
        try {
            if (!newFile.exists()) {
                newFile.createNewFile();
            }
            Writer writer = new FileWriter(newFile);
            bufferedWriter = new BufferedWriter(writer);
            bufferedWriter.write(_data);
        } catch (IOException e) {
            errorDialog.setVisible(true);
            errorText.setText("Decompression error!");
        } finally{
            try{
                if(bufferedWriter != null) bufferedWriter.close();
            } catch(Exception ex){
                errorDialog.setVisible(true);
                errorText.setText("Decompression error!");
            }
        }
            diagDialog.setVisible(true);
            diagText.setText("Done!");
        }catch(Exception e){
            errorDialog.setVisible(true);
            errorText.setText("Decompression error!");
        }
//convert file into array of bytes
	    
	       
	    //convert array of bytes into file
    }//GEN-LAST:event_sixBitDecompressActionPerformed

    private void chooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseFileActionPerformed
        subFileOpenActionPerformed(evt);
    }//GEN-LAST:event_chooseFileActionPerformed

    private void subFileQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subFileQuitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_subFileQuitActionPerformed

    private void fileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileChooserActionPerformed

    private void diagCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diagCloseActionPerformed
        diagDialog.dispose();
    }//GEN-LAST:event_diagCloseActionPerformed

    private void errorCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errorCloseActionPerformed
        errorDialog.dispose();
    }//GEN-LAST:event_errorCloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompressorGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompressorGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompressorGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompressorGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CompressorGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseFile;
    private javax.swing.JTextArea currPath;
    private javax.swing.JLabel currPathLabel;
    private javax.swing.JButton diagClose;
    private javax.swing.JDialog diagDialog;
    private javax.swing.JLabel diagText;
    private javax.swing.JPanel dictComp;
    private javax.swing.JButton dictCompress;
    private javax.swing.JButton dictDecompress;
    private javax.swing.JLabel dictText;
    private javax.swing.JButton errorClose;
    private javax.swing.JDialog errorDialog;
    private javax.swing.JLabel errorText;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JPanel filePane;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenu menuFile;
    private javax.swing.JPanel sixBit;
    private javax.swing.JButton sixBitCompress;
    private javax.swing.JButton sixBitDecompress;
    private javax.swing.JLabel sixBitText;
    private javax.swing.JMenuItem subFileOpen;
    private javax.swing.JMenuItem subFileQuit;
    // End of variables declaration//GEN-END:variables
}
